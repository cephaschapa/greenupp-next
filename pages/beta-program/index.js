import { ArrowLeftIcon, MailIcon, PhoneIcon, ShareIcon, UserIcon } from '@heroicons/react/solid'
import Head from 'next/head'
import {useState} from 'react'
import axios from 'axios'
import {useRouter} from 'next/router'

const Index = () => {
    const [loading, setLoading] = useState(true)
    const [res, setRes] = useState(false)
    const [resName, setResName] = useState()
    const [fname, setFname] = useState()
    const [lname, setLname] = useState()
    const [email, setEmail] = useState()
    const [phone, setPhone] = useState()
    const [optIn, setOptIn] = useState()
    const [isSubmit, setIsSubmit] = useState(false)
    const [msg, setMsg] = useState()

    const router = useRouter()


    const signpHandler = (e) => {
        
        e.preventDefault()
        setIsSubmit(true)
        axios.post('https://greenupp-master.herokuapp.com/api/v1/betas', {
            "fname": fname,
            "lname": lname,
            "email": email,
            "phone": phone,
            "optIn": optIn === undefined ? false : true,
        }).then(function (response) {
            console.log(response)
            if(response.status ===201){
                setResName(response.data.data.fname)
                setRes(true)
                setIsSubmit(false)
                setMsg('')
                setFname('')
                setLname('')
                setEmail('')
                setOptIn()
                setPhone('')
            }
        }).catch((error) => {
            console.error(error)
            setMsg('Please fill in the required fields üôÑ (*)')
            setIsSubmit(false)
            setRes()
        })
            
    } 
    const shareHandler = async (e) => {
        e.preventDefault();
        const shareData = {
            title: 'Greenupp Œ≤eta Program',
            text: 'Be part our Œ≤eta Program',
            url: 'https://greenupp.vercel.app/beta-program'
        }
        try {
            await navigator.share(shareData)
            // alert("Thank you for sharing")
        } catch (error) {
            // alert(error.message)
        }

    }
    setInterval(() => {
        setLoading(false)
    }, 4000);

    if(loading){
        return (
            <>
                <section className="h-screen w-full flex flex-col items-center justify-center">
                    <div className="flex flex-col justify-center items-center w-full space-y-1">
                        <h1 className="text-3xl text-green-600 font-bold">Greenupp</h1>
                        <p className="text-xl text-gray-500">Œ≤eta Program</p>
                        <div className="py-5">
                            <div className="border-2 border-green-600 p-3 animate-bounce rounded-full">
                                <div className="bg-green-600 p-2 animate-spin rounded"></div>
                            </div>
                            <div className="bg-gray-600 p-1 rounded-full animate-pulse"></div>
                        </div>
                    </div>
                    <div className="fixed bottom-5 flex flex-col items-center">
                        <p>A Product of Orion</p>
                        <p className="font-bold bg-black text-white from-blue-400 to-green-600 text-xl text-center border-2 w-24 p-2 rounded-full">ŒòŒìŒôŒòŒ†</p>
                        
                    </div>
                </section>
            </>
        )
    }


    return (
        <div>
            <Head>
                <title>Greenupp Technologies| Beta Program</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <section className="h-screen w-full flex justify-center">
                <ArrowLeftIcon onClick={()=>router.push('/')} className="h-12 w-12 fixed top-10 border-2 left-4 md:left-20 border-gray-400 p-2 bg-white rounded-full"/>
                <div className="flex flex-col justify-center items-center w-full md:w-1/2 lg:w-1/3 space-y-3">
                    <h1 className="text-3xl text-green-600">Greenupp Technologies</h1>
                    <p className="text-xl font-bold text-gray-500">Œ≤eta Program</p>
                    <form className="flex flex-col w-full px-4 space-y-3">
                        
                            <div className="flex w-full bg-gray-100 p-3 rounded-full items-center">
                                <UserIcon className="h-8 w-8 text-gray-400 cursor-pointer"/>
                                <input value={fname} onChange={
                                    (e) => {
                                        setFname(e.target.value)
                                    }
                                } type="text" className=" w-full bg-transparent outline-none px-2" placeholder="First Name*" required/>
                            </div>
                            <div className="flex w-full bg-gray-100 p-3 rounded-full items-center">
                                <UserIcon className="h-8 w-8 text-gray-400"/>
                                <input value={lname} onChange={
                                    (e) => {
                                       setLname( e.target.value)
                                    }
                                } type="text" className=" w-full bg-transparent outline-none px-2" placeholder="Last Name*" required/>
                            </div>
                            <div className="flex w-full bg-gray-100 p-3 rounded-full items-center">
                                <MailIcon className="h-8 w-8 text-gray-400"/>
                                <input value={email} onChange={
                                    (e) => {
                                        setEmail(e.target.value)
                                    }
                                } type="email" className=" w-full bg-transparent outline-none px-2" placeholder="Email*" required/>
                            </div>
                            <div className="flex w-full bg-gray-100 p-3 rounded-full items-center">
                                <PhoneIcon className="h-8 w-8 text-gray-400"/>
                                <input value={phone} onChange={
                                    (e) => {
                                       setPhone( e.target.value)
                                    }
                                } type="tel" className=" w-full bg-transparent outline-none px-2" placeholder="Phone Number*" required/>
                            </div>
                            <div className="flex space-x-2 py-2">
                                <input value={optIn} onChange={
                                    (e) => {
                                       setOptIn( e.target.checked);
                                    }} type="checkbox" className="checkbox text-gray-300 h-6 w-6"/> 
                                <span className="text-gray-600 font-bold">Recieve our weekly newsletters. Opt in?</span>
                            </div>
                            <button onClick={signpHandler} className="bg-green-600 p-5 font-bold rounded-full text-white">
                                {isSubmit? <><div className="border-2 space-x-2 border-green-600 rounded-full flex justify-center">
                                <div className="bg-white p-2 h-3 w-3 animate-spin rounded"></div>
                                <div className="bg-white p-2 h-3 w-3 animate-spin rounded"></div>
                                <div className="bg-white p-2 h-3 w-3 animate-spin rounded"></div>
                            </div></>: 'Sign in'}
                            </button>
                            {
                                res? <p className="py-3 text-center text-green-600 font-bold uppercase">Thank you {resName}üòÅ</p>:null
                            }
                            {
                                msg? <p className="py-3 font-bold text-center text-red-500">{msg}</p>:null
                            }
                        
                    </form>
                </div>
                <button onClick={shareHandler} className="fixed bottom-5 right-5 p-4 rounded-full text-white bg-green-600 shadow-md animate-pulse">
                    <ShareIcon className="h-8 w-8"/>
                </button>
            </section>
        </div>
    )
}

export default Index
